family=poisson)
View(models)
# Model did not converge. Grab Theta and fixed effects data from model and put into temporary object
ss <- getME(models$eth$avers$total.e,c("theta","fixef"))
# Extend the number of iterations with optimizer and update model
models$eth$avers$total.e <- update(models$eth$avers$total.e,start=ss,control=glmerControl(optCtrl=list(maxfun=2e6)))
# Model converged, get summary of output
summary(models$eth$avers$total.e)
# Remove temporary object to declutter workspace
remove(ss)
# Start by plotting a density function of our model's residuals
plot(density(residuals(models$eth$avers$total.e)),
main="", xlab="", frame= FALSE)
# Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$avers$total.e)) # get the residual mean
STDEV = sqrt(var(residuals(models$eth$avers$total.e))) # get the st dev
curve(dnorm(x, mean=MEAN, sd=STDEV), col="darkblue", lwd=2, add=TRUE, yaxt="n") # Generate normal curve
remove(MEAN,STDEV)
## Ethanol Group Only: Total Ethanol Consumed (total.e) ####
# predictors: full factorial fixed effects of centered concentration, age, and total ethanol consumed during drinking phase of study
models$eth$avers$total.e <- glmer(Total.Aversive ~ c.conc*Age*c.totale
+ (c.conc|RatID), # and the random effects of the intercept (RatID) and the slope of concentration
data=data$eth$no.ctrl,
family=poisson)
# Model did not converge. Grab Theta and fixed effects data from model and put into temporary object
ss <- getME(models$eth$avers$total.e,c("theta","fixef"))
# Extend the number of iterations with optimizer and update model
models$eth$avers$total.e <- update(models$eth$avers$total.e,start=ss,control=glmerControl(optCtrl=list(maxfun=2e6)))
# Model converged, get summary of output
summary(models$eth$avers$total.e)
# Remove temporary object to declutter workspace
remove(ss)
# Compare significant variables
compars$eth$avers$total.e <- list() # Create new comparison list for total.e model
compars$eth$avers$total.e$age<- emmeans(models$eth$avers$total.e, ~ Age) # Perform comparison of Condition with emmeans
summary(compars$eth$avers$total.e$age, type = "response") # get summary in the numerical space of the original variable not the log/Poisson space
# predictors: note that these are not the full factorial fixed effects. I'm not interested in the higher level interactions here.
models$eth$avers$MR1 <-glmer(Total.Aversive ~ c.conc+Age+c.MAC+c.ROC
+ c.conc:Age
+ c.conc:c.MAC
+ c.conc:c.ROC
+ Age:c.MAC
+ Age:c.ROC
+ c.conc:Age:c.MAC
+ c.conc:Age:c.ROC
+ (c.conc|RatID), data=data$eth$no.ctrl, family=poisson)
# Model did not converge, used code below to extend # of iterations and start from where the previous model left off.
ss <- getME(models$eth$avers$MR1,c("theta","fixef"))
models$eth$avers$MR1 <- update(models$eth$avers$MR1,start=ss3,control=glmerControl(optCtrl=list(maxfun=2e6)))
# predictors: note that these are not the full factorial fixed effects. I'm not interested in the higher level interactions here.
models$eth$avers$MR1 <-glmer(Total.Aversive ~ c.conc+Age+c.MAC+c.ROC
+ c.conc:Age
+ c.conc:c.MAC
+ c.conc:c.ROC
+ Age:c.MAC
+ Age:c.ROC
+ c.conc:Age:c.MAC
+ c.conc:Age:c.ROC
+ (c.conc|RatID), data=data$eth$no.ctrl, family=poisson)
# Model did not converge, used code below to extend # of iterations and start from where the previous model left off.
ss <- getME(models$eth$avers$MR1,c("theta","fixef"))
models$eth$avers$MR1 <- update(models$eth$avers$MR1,start=ss,control=glmerControl(optCtrl=list(maxfun=2e6)))
summary(models$eth$avers$MR1)
remove(ss)
#Check variance inflation factor (VIF)
vif(models$eth$avers$MR1)
# Compare with the previous model
AIC(models$eth$avers$MR1, models$eth$avers$total.e)
BIC(models$eth$avers$MR1, models$eth$avers$total.e)
install_github("twukitsch/QUINTegrate")
install.github("https://github.com/twukitsch/QUINTegrate")
# Start by plotting a density function of our model's residuals
plot(density(residuals(models$eth$avers$MR1)),
main="", xlab="", frame= FALSE)
# Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$avers$MR1)) # get the residual mean
STDEV = sqrt(var(residuals(models$eth$avers$MR1))) # get the st dev
curve(dnorm(x, mean=MEAN, sd=STDEV), col="darkblue", lwd=2, add=TRUE, yaxt="n") # Generate normal curve
remove(MEAN,STDEV)
summary(models$eth$avers$MR1)
# predictors: note that these are not the full factorial fixed effects. I'm not interested in the higher level interactions here.
models$eth$avers$MR3 <-glmer(Total.Aversive ~ c.conc+Age+c.MAC3+c.ROC3
+ c.conc:Age
+ c.conc:c.MAC3
+ c.conc:c.ROC3
+ Age:c.MAC3
+ Age:c.ROC3
+ c.conc:Age:c.MAC3
+ c.conc:Age:c.ROC3
+ (c.conc|RatID), data=data$eth$no.ctrl, family=poisson)
# Model did not converge, used code below to extend # of iterations and start from where the previous model left off.
ss <- getME(models$eth$avers$MR3, c("theta","fixef"))
models$eth$avers$MR3 <- update(models$eth$avers$MR3,start=ss,control=glmerControl(optCtrl=list(maxfun=2e9)))
remove(ss)
summary(models$eth$avers$MR3)
vif(models$eth$avers$MR3)
AIC(models$eth$avers$MR3, models$eth$avers$MR1, models$eth$avers$total.e)
BIC(models$eth$avers$MR3, models$eth$avers$MR1, models$eth$avers$total.e)
# Start by plotting a density function of model's residuals
plot(density(residuals(models$eth$avers$MR3)),
main="", xlab="", frame= FALSE)
# Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$avers$MR3)) # get the residual mean
STDEV = sqrt(var(residuals(models$eth$avers$MR3))) # get the st dev
curve(dnorm(x, mean=MEAN, sd=STDEV), col="darkblue", lwd=2, add=TRUE, yaxt="n") # Generate normal curve
remove(MEAN,STDEV)
### Ethanol Hedonics GLMER (with EtOH vs CTRL)####
models$eth$hedon$overall <-glmer(Total.Hedonic...MM.~c.conc*Age*Condition
+ (c.conc|RatID), data=data$eth$ctrl, family=poisson) #Either syntax works for Intercept & Slope inclusion
summary(models$eth$hedon$overall)
#Post Hocs & Planned Contrasts
compars$eth$avers$overall <- list() # Create new comparison list for overall model
# Use emmeans to get means for Conditions and summary to back-transform using 'type="response"'
compars$eth$hedon$overall$condition <- emmeans(models$eth$hedon$overall,~ Condition)
summary(compars$eth$hedon$overall$condition, type = "response")
# Getting bs for Condition. Remember that c.conc was rescaled so move the decimal to the left 2 times.
compars$eth$hedon$overall$conc.x.cond <- emtrends(models$eth$hedon$overall, ~c.conc*Condition, var="c.conc")
compars$eth$hedon$overall$conc.x.cond
View(compars)
compars$eth$avers$overall <- list() # Create new comparison list for overall model
compars$eth$avers$overall$condition<- emmeans(Eavers,~ Condition)
#Checking to see if Adolescent vs Adult IAE rats were different without correction as this is the only relevant comparison here
compars$eth$avers$overall <- list() # Create new comparison list for overall model
compars$eth$avers$overall$condition <- emmeans(models$eth$aversive$overall,~ Condition)
View(models)
compars$eth$avers$overall$condition <- emmeans(models$eth$aversive$overall, ~ Condition)
compars$eth$avers$overall$condition <- emmeans(models$eth$avers$overall, ~ Condition)
summary(compars$eth$avers$overall$condition, type = "response")
View(compars)
### Ethanol Hedonics GLMER (EtOH Group Only: Total EtOH Consumed) ######
models$eth$hedon$total.e <- glmer(Total.Hedonic...MM. ~ c.conc*Age*c.totale
+ (c.conc|RatID),
data=data$eth$no.ctrl,
family=poisson)
summary(models$eth$hedon$total.e)
#Post Hocs and Planned Contrasts
compars$eth$avers$total.e <- list() # Create new comparison list for overall model
compars$eth$avers$total.e$age <- emmeans(models$eth$hedon$total.e,~ Age) # Age post hoc comparison
summary(compars$eth$avers$total.e$age, type = "response")
# Post Hocs & Planned Concrasts
compars$eth$avers$total.e <- list() # Create new comparison list for total.e model
compars$eth$avers$total.e$age<- emmeans(models$eth$avers$total.e, ~ Age) # Perform comparison of Conditions with emmeans
summary(compars$eth$avers$total.e$age, type = "response")
compars$eth$hedon$overall$conc.x.cond
summary(compars$eth$hedon$overall$conc.x.cond)
summary(compars$eth$hedon$overall$conc.x.cond, type = "response")
compars$eth$hedon$overall$conc.x.cond <- emtrends(models$eth$hedon$overall, ~ c.conc*Condition, var="c.conc", regrid = "response")
compars$eth$hedon$overall$conc.x.cond
summary(compars$eth$hedon$overall$conc.x.cond)
### Ethanol Hedonics GLMER (EtOH Group Only: MAC & ROC) ######
models$eth$hedon$MR1 <- glmer(Total.Hedonic...MM. ~ c.conc+Age+c.MAC+c.ROC
+ c.conc:Age
+ c.conc:c.MAC
+ c.conc:c.ROC
+ Age:c.MAC
+ Age:c.ROC
+ c.conc:Age:c.MAC
+ c.conc:Age:c.ROC
+ (c.conc|RatID),
data=data$eth$no.ctrl,
family=poisson)
summary(models$eth$hedon$MR1)
# Variance inflation check & model comparison
vif(models$eth$hedon$MR1)
AIC(models$eth$hedon$MR1, models$eth$hedon$total.e)
BIC(models$eth$hedon$MR1, models$eth$hedon$total.e)
#plot residual density function
plot(density(residuals(models$eth$hedon$MR1)),
main="", xlab="", frame= FALSE)
#Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$hedon$MR1))
STDEV = sqrt(var(residuals(models$eth$hedon$MR1)))
curve(dnorm(x, mean=MEAN, sd=STDEV), col="darkblue", lwd=2, add=TRUE, yaxt="n")
remove(MEAN,STDEV)
### Ethanol Hedonics GLMER (EtOH Group Only: MAC & ROC) ######
models$eth$hedon$MR1 <- glmer(Total.Hedonic...MM. ~ c.conc+Age+c.MAC+c.ROC
+ c.conc:Age
+ c.conc:c.MAC
+ c.conc:c.ROC
+ Age:c.MAC
+ Age:c.ROC
+ c.conc:Age:c.MAC
+ c.conc:Age:c.ROC
+ (c.conc|RatID),
data = data$eth$no.ctrl,
family = poisson)
summary(models$eth$hedon$MR1)
# Variance inflation check & model comparison
vif(models$eth$hedon$MR1)
AIC(models$eth$hedon$MR1, models$eth$hedon$total.e)
BIC(models$eth$hedon$MR1, models$eth$hedon$total.e)
### Ethanol Hedonics GLMER (EtOH Group Only: MAC3 & ROC3) ######
models$eth$hedon$MR3 <- glmer(Total.Hedonic...MM. ~ c.conc+Age+c.MAC3+c.ROC3
+ c.conc:Age
+ c.conc:c.MAC3
+ c.conc:c.ROC3
+ Age:c.MAC3
+ Age:c.ROC3
+ c.conc:Age:c.MAC3
+ c.conc:Age:c.ROC3
+ (c.conc|RatID),
data = data$eth$no.ctrl,
family = poisson)
summary(models$eth$hedon$MR3)
# Variance inflation check & model comparison
vif(models$eth$hedon$MR3)
AIC(models$eth$hedon$MR3, models$eth$hedon$MR1, models$eth$hedon$total.e)
BIC(models$eth$hedon$MR3, models$eth$hedon$MR1, models$eth$hedon$total.e)
# plot residual density function
plot(density(residuals(models$eth$hedon$MR3)),
main = "",
xlab = "",
frame = FALSE)
# Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$hedon$MR3))
STDEV = sqrt(var(residuals(models$eth$hedon$MR3)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV)
plot(density(residuals(models$eth$hedon$MR1)),
main = "",
xlab = "",
frame = FALSE)
#Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$hedon$MR1))
STDEV = sqrt(var(residuals(models$eth$hedon$MR1)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV)
plot(density(residuals(models$eth$hedon$MR1)),
main = "",
xlab = "",
frame = FALSE)
MEAN = mean(residuals(models$eth$hedon$MR1))
STDEV = sqrt(var(residuals(models$eth$hedon$MR1)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV)
plot(density(residuals(models$eth$hedon$MR3)),
main = "",
xlab = "",
frame = FALSE)
MEAN = mean(residuals(models$eth$hedon$MR3))
STDEV = sqrt(var(residuals(models$eth$hedon$MR3)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV)
plot(density(residuals(models$eth$hedon$MR1)),
main = "",
xlab = "",
frame = FALSE)
#Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$hedon$MR1))
STDEV = sqrt(var(residuals(models$eth$hedon$MR1)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV)
models$eth$hedon$MR1 <- glmer(Total.Hedonic...MM. ~ c.conc+Age+c.MAC+c.ROC
+ c.conc:Age
+ c.conc:c.MAC
+ c.conc:c.ROC
+ Age:c.MAC
+ Age:c.ROC
+ c.conc:Age:c.MAC
+ c.conc:Age:c.ROC
+ (c.conc|RatID),
data = data$eth$no.ctrl,
family = poisson)
summary(models$eth$hedon$MR1)
#plot residual density function
plot(density(residuals(models$eth$hedon$MR1)),
main = "",
xlab = "",
frame = FALSE)
#Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$eth$hedon$MR1))
STDEV = sqrt(var(residuals(models$eth$hedon$MR1)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV)
models$eth$hedon$MR3 <- glmer(Total.Hedonic...MM. ~ c.conc+Age+c.MAC3+c.ROC3
+ c.conc:Age
+ c.conc:c.MAC3
+ c.conc:c.ROC3
+ Age:c.MAC3
+ Age:c.ROC3
+ c.conc:Age:c.MAC3
+ c.conc:Age:c.ROC3
+ (c.conc|RatID),
data = data$eth$no.ctrl,
family = poisson)
summary(models$eth$hedon$MR3)
plot(density(residuals(models$eth$hedon$MR3)),
main = "",
xlab = "",
frame = FALSE)
plot(density(residuals(models$eth$hedon$MR1)),
main = "",
xlab = "",
frame = FALSE)
### Ethanol Aversives GLMER (with EtOH vs CTRL)####
models$suc$avers$overall <- glmer(Total.Aversive ~ c.molarity*Age*Condition
+ (c.molarity|RatID),
data = data$suc$ctrl,
family = poisson)
# Model did not converge, used code below to extend # of iterations and start from where the previous model left off.
ss <- getME(models$suc$avers$overall, c("theta", "fixef"))
models$suc$avers$overall <- update(models$suc$avers$overall,
start = ss,
control = glmerControl(optCtrl = list(maxfun = 2e6)))
remove(ss) # Clean workspace
summary(models$suc$avers$overall)
# Post Hocs & Planned Contrasts
# Checking to see if Adolescent vs Adult IAE rats were different as this is the only relevant comparison here
compars$suc$avers$overall <- list() # Create new comparison list for 'overall' model
compars$suc$avers$overall$age <- emmeans(models$suc$avers$overall, ~ Age)
summary(compars$suc$avers$overall$age, type = "response")
summary(models$suc$avers$overall)
### Sucrose Aversives GLMER (EtOH Group Only: Total EtOH Consumed) ####
models$suc$avers$total.e <- glmer(Total.Aversive ~ c.molarity*Age*c.totale
+ (c.molarity|RatID),
data = data$suc$no.ctrl,
family = poisson)
# Model did not converge, used code below to extend # of iterations and start from where the previous model left off.
ss <- getME(models$suc$avers$total.e, c("theta", "fixef"))
models$suc$avers$total.e <- update(models$suc$avers$total.e,
start = ss,
control = glmerControl(optCtrl = list(maxfun = 2e6)))
remove(ss) # Clean workspace
summary(models$suc$avers$total.e)
Savers.Ado.b <- fixef(models$suc$avers$total.e)[4] + fixef(models$suc$avers$total.e)[7]
Savers.Ado.b
#Adult
Savers.Adu.b <- fixef(models$suc$avers$total.e)[4] - fixef(models$suc$avers$total.e)[7]
Savers.Adu.b
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ c.molarity*Age,
var = "c.molarity")
summary(compars$eth$hedon$overall$conc.x.cond)
summary(ompars$suc$avers$total.e$molar.x.age)
summary(compars$suc$avers$total.e$molar.x.age)
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ c.molarity*Age,
var = "c.molarity",
regrid = "response")
summary(compars$suc$avers$total.e$molar.x.age)
fixef(models$suc$avers$total.e)[7]
fixef(models$suc$avers$total.e)[4]
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age,
var = "c.molarity",
#regrid = "response")
summary(compars$suc$avers$total.e$molar.x.age)
summary(compars$suc$avers$total.e$molar.x.age)
compars$suc$avers$total.e$molar.x.age
Savers.Ado.b
Savers.Adu.b
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age,
var = "c.molarity",
regrid = "response")
compars$suc$avers$total.e$molar.x.age
fixef(models$suc$avers$total.e)
fixef(models$suc$avers$total.e)[7]
Savers.Ado.b <- fixef(models$suc$avers$total.e)[3] + fixef(models$suc$avers$total.e)[7]
Savers.Ado.b
#Adult
Savers.Adu.b <- fixef(models$suc$avers$total.e)[3] - fixef(models$suc$avers$total.e)[7]
Savers.Adu.b
Savers.Ado.b
Savers.Adu.b
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age*c.molarity,
var = "c.molarity",
#regrid = "response")
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age*c.molarity,
var = "c.molarity",
#regrid = "response")
)
compars$suc$avers$total.e$molar.x.age
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age*c.molarity,
var = "c.molarity")
#regrid = "response")
compars$suc$avers$total.e$molar.x.age
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age,
var = "c.molarity")
compars$suc$avers$total.e$molar.x.age
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age,
var = "c.molarity",
regrid = "response")
compars$suc$avers$total.e$molar.x.age
emm <- emmeans(models$suc$avers$total.e, ~ Age * c.molarity)
emm
compars$suc$avers$total.e$molar.x.age <- emtrends(emm,
~ Age,
var = "c.molarity")
summary(models$suc$avers$total.e)
summary(compars$suc$avers$total.e$molar.x.age)
compars$suc$avers$total.e$molar.x.age <- emtrends(models$suc$avers$total.e,
~ Age,
var = "c.molarity")
summary(compars$suc$avers$total.e$molar.x.age)
plot(density(residuals(models$suc$avers$total.e)),
main = "",
xlab = "",
frame = FALSE)
# Add normal distribution to the residual plot for comparison to check assumption of normality
MEAN = mean(residuals(models$suc$avers$total.e))
STDEV = sqrt(var(residuals(models$suc$avers$total.e)))
curve(dnorm(x, mean = MEAN, sd = STDEV),
col = "darkblue",
lwd = 2,
add = TRUE,
yaxt = "n")
remove(MEAN, STDEV) # Clean workspace
summary(compars$eth$hedon$overall$conc.x.cond)
compars$eth$hedon$overall$conc.x.cond <- emtrends(models$eth$hedon$overall,
~ Condition,
var = "c.conc")
summary(compars$eth$hedon$overall$conc.x.cond)
remove(Savers.Ado.b,Savers.Adu.b)
### Sucrose Aversives GLMER (EtOH Group Only: MAC & ROC) ####
models$suc$avers$MR1 <- glmer(Total.Aversive ~ c.molarity+Age+c.MAC+c.ROC
+ c.molarity:Age
+ c.molarity:c.MAC
+ c.molarity:c.ROC
+ Age:c.MAC
+ Age:c.ROC
+ c.molarity:Age:c.MAC
+ c.molarity:Age:c.ROC
+ (c.molarity|RatID),
data = data$suc$no.ctrl,
family = poisson)
# Model did not converge, used code below to extend # of iterations and start from where the previous model left off.
ss <- getME(models$suc$avers$MR1, c("theta", "fixef"))
models$suc$avers$MR1 <- update(models$suc$avers$MR1,
start = ss,
control = glmerControl(optCtrl = list(maxfun = 2e9)))
remove(ss) # Clean workspace
summary(models$suc$avers$MR1)
# Variance inflation check & model comparison
vif(models$suc$avers$MR1)
AIC(models$suc$avers$MR1, models$suc$avers$total.e)
BIC(models$suc$avers$MR1, models$suc$avers$total.e)
models$suc$avers$MR1 <- NULL
## SUCROSE HEDONIC ANALYSES ####
### Sucrose Hedonics GLMER (with EtOH vs CTRL)####
models$suc$hedon$overall <- glmer(Total.Hedonic...MM. ~ c.molarity*Age*Condition
+ (c.molarity|RatID),
data = data$suc$ctrl,
family = poisson)
summary(models$suc$hedon$overall)
# Post Hocs & Planned Contrasts
compars$suc$hedon$overall <- list() # Create new comparison list for overall model
# Use emmeans to get means for Conditions and summary to back-transform using 'type = "response"'
compars$suc$hedon$overall$age <- emmeans(models$suc$hedon$overall, ~ Age)
summary(compars$suc$hedon$overall$age, type = "response")
# Getting b's for Condition. Remember that c.molarity was rescaled so move the decimal to the left 2 times.
compars$suc$hedon$overall$molar.x.age <- emtrends(models$suc$hedon$overall,
~ Age,
var = "c.molarity")
# If we wanted these slopes in terms of the response variable AT THE GRAND
# MEAN we can add the `regrid = "response"` argument
# However, this is frequently NOT what you want when you graph the log
# curve or talk about log change across a response variable
summary(compars$suc$hedon$overall$molar.x.age)
models$suc$hedon$total.e <- glmer(Total.Hedonic...MM. ~ c.molarity*Age*c.totale
+ (c.molarity|RatID),
data = data$suc$no.ctrl,
family = poisson)
summary(models$suc$hedon$total.e)
compars$suc$hedon$total.e <- list() # Create new comparison list for overall model
compars$suc$hedons$total.e$age <- emmeans(models$suc$hedon$total.e, ~ Age)
summary(compars$suc$hedon$total.e$age)#, type = "response")
compars$suc$hedon$total.e <- list() # Create new comparison list for overall model
compars$suc$hedons <- NULL
compars$suc$hedon$total.e <- list() # Create new comparison list for overall model
compars$suc$hedon$total.e$age <- emmeans(models$suc$hedon$total.e, ~ Age) # Age post hoc comparison
summary(compars$suc$hedon$total.e$age)#, type = "response")
summary(compars$suc$hedon$total.e$age, type = "response")
# Getting b's for Age. Remember that c.molarity was rescaled so move the decimal to the left 2 times.
compars$suc$hedon$total.e$molar.x.age <- emtrends(models$suc$hedon$overall,
~ Age,
var = "c.molarity")
# If we wanted these slopes in terms of the response variable AT THE GRAND
# MEAN we can add the `regrid = "response"` argument
# However, this is frequently NOT what you want when you graph the log
# curve or talk about log change across a response variable
summary(compars$suc$hedon$total.e$molar.x.age)
remove(emm)
