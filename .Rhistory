library(tools, lib.loc = "C:/Program Files/R/R-4.1.2/library")
install.packages("rtools")
install.packages("Rtools")
Rtools40
install.packages("Rtools40")
write('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', file = "~/.Renviron", append = TRUE)
Sys.which("make")
install.packages("jsonlite", type = "source")
print(hello world)
print("hello world")
?print()
print("hello world", quote = FALSE)
vec <- c(1,2,3,4,5,6,7,8,9,10)
vec3 <- vec +3
vec3 - 3
load("D:/TW1/Data/TW1.RData")
library("MASS")
library("lattice")
library("boot")
library("car")
library("emmeans")
library("lme4")
library("zoo")
library("tidyr")
library("multcomp")
library("foreign")
library("msm")
library("ggplot2")
library("effects")
library("lmerTest")
library("dplyr")
install.packages("jsonlite")
install.packages("lattice")
install.packages("car")
install.packages("emmeans")
install.packages("lme4")
install.packages("zoo")
install.packages("tidyr")
install.packages("foreign")
install.packages("multcomp")
install.packages("msm")
install.packages("ggplot2")
install.packages("effects")
install.packages("lmerTest")
install.packages("dplyr")
library("MASS")
library("lattice")
library("boot")
library("car")
library("emmeans")
library("lme4")
install.packages("lme4")
install.packages("Rcpp")
install.packages("Rcpp", repos="https://rcppcore.github.io/drat")
load("C:/Users/kieri/Documents/ABHV/ABHV_workspace.RData")
View(compars)
# SET WORKING DIRECTORY
setwd("C:/Users/kieri/Documents/ABHV")
getwd()
# RUN SETUP (download & load necessary packages, import data, subset & tweak data)
source("setup.R")
# RUN ETHANOL glmers
source("ethanol_glmers.R")
# RUN SUCROSE glmers
source("sucrose_glmers.R")
# RUN WATER glmers
source("water_glmers.R")
# RUN GRAPH SETUP
source("graph_setup.R")
# RUN ETHANOL graphs
source("ethanol_graphs.R")
# RUN SUCROSE graphs
source("sucrose_graphs.R")
# RUN SUCROSE graphs
source("water_graphs.R")
# SAVE WORKSPACE
save.image("ABHV_workspace.RData")
seq(.05, .40, .025)
knitr::opts_chunk$set(echo = T,
#results = "hide",
error = F,
warning = F,
message = F,
eval = T)
# Start ggplot
temporary.ggp <- ggplot(plots$eth$avers$overall$fx,
aes(Concentration, fit,
group = interaction(Age, Condition),
col = interaction(Age, Condition),
fill = interaction(Age, Condition),
linetype = interaction(Age, Condition),
shape = interaction(Age, Condition)))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$ctrl,
aes(x = Concentration, y = Total.Aversive))+
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$overall$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"))+ # Poisson link function
# Add Error Ribbon to Graph
geom_ribbon(data = plots$eth$avers$overall$fx,
aes(ymin = lower, ymax = upper))+ # Opacity at 25% (75% Transparent)
theme_classic()+
xlab("Ethanol % (v/v)")+ # X axis label
ylab("Aversive Responses (+/-SEM)") # Y axis label
temporary.ggp
# Start ggplot
temporary.ggp <- ggplot(plots$eth$avers$overall$fx,
aes(Concentration, fit,
group = interaction(Age, Condition),
col = interaction(Age, Condition),
fill = interaction(Age, Condition),
linetype = interaction(Age, Condition),
shape = interaction(Age, Condition)))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$ctrl,
aes(x = Concentration, y = Total.Aversive))+
# Add Error Ribbon to Graph
geom_ribbon(data = plots$eth$avers$overall$fx,
aes(ymin = lower, ymax = upper))+ # Opacity at 25% (75% Transparent)
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$overall$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"))+ # Poisson link function
theme_classic()+
xlab("Ethanol % (v/v)")+ # X axis label
ylab("Aversive Responses (+/-SEM)") # Y axis label
temporary.ggp
# Start ggplot
temporary2.ggp <- ggplot(plots$eth$avers$total.e$fx,
aes(totale,
fit,
group = Age,
col = Age,
fill = Age,
shape = Age))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$no.ctrl,
aes(x = TOTAL.ETOH.Swap.Consumed..g.kg.,
y = Total.Aversive))+
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$total.e$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"))+ # Poisson link function
# Add Error Ribbon to graph
geom_ribbon(data = plots$eth$avers$total.e$fx,
aes(ymin = lower, ymax = upper))+
facet_wrap(~ as.factor(Concentration), nrow = 1)+ # Makes the plot multi-panel. One for each level of Concentration
theme_classic()+
xlab("Total Ethanol Consumed (g/kg)")+
ylab("Aversive Responses (+/-SEM)")+
ggtitle("Ethanol % (v/v)")
temporary2.ggp
sort(unique(ABHVdata$eth$ctrl$Concentration)
)
plots$eth$avers$overall$ggp
# Start ggplot
temporary.ggp <- ggplot(plots$eth$avers$overall$fx,
aes(Concentration, fit,
group = interaction(Age, Condition),
col = interaction(Age, Condition),
fill = interaction(Age, Condition),
linetype = interaction(Age, Condition),
shape = interaction(Age, Condition)))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$ctrl,
aes(x = Concentration, y = Total.Aversive),
size = 6,
alpha = 0.75)+
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$overall$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"), # Poisson link function
linewidth = 1.5)+ # Width of trend lines
# Add Error Ribbon to Graph
geom_ribbon(data = plots$eth$avers$overall$fx,
aes(ymin = lower, ymax = upper),
colour = NA, # colour = NA suppresses edges of the ribbon
alpha = 0.25)+ # Opacity at 25% (75% Transparent)
labs(tag = "A.")+ # Add image tag for multipanel final image
scale_color_manual("",
values = c("#F8C8C8", "#82BFC4","#F8766D","#00BFC4"), # Line and Point color
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Labels for legend
scale_fill_manual("",
values = c("#F8C8C8", "#82BFC4","#F8766D","#00BFC4"), # Ribbon color
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Legend labels
scale_linetype_manual("",
values = c("dashed","dashed","solid","solid"), # Types of lines
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Legend labels
scale_shape_manual("",
values = c(17,18,16,15), # Shapes of points
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Legend labels
scale_x_continuous(expand = c(0, 0),
limits = c(0, 41), # Axis length limits
breaks = c(5, 20, 40), # Axis break positions
labels = as.character(c(5, 20, 40)))+ # Axis value labels
scale_y_continuous(expand = c(0, 0),
limits = c(0, 110), # Axis length limits
breaks = seq(from = 0, to = 100, by = 25), # Axis break positions
labels = as.character(seq(from = 0, to = 100, by = 25)))+ # Axis value labels
theme_classic()+
theme(# Text
strip.text.x = element_text(size = 17, face = "bold"), # Modify label text for facets
axis.title = element_text(size = 18), # Modify axis title text
axis.text = element_text(size = 17, color = "black", face = "bold"), # Modify axis value text
legend.title = element_text(size = 16), # Modify legend title text (!) Probably Uneccessary
legend.text = element_text(size = 14), # Modify legend value text
plot.tag = element_text(size = 32, face = "bold"), # Modify the plot tag (e.g. "A.") text
# Positioning
axis.title.x = element_text(margin = margin(t = 13, r = 0, b = 0, l = 0)), # Modify X axis appearance
axis.title.y = element_text(margin = margin(t = 0, r = 18, b = 0, l = 0)), # Modify Y axis appearance
plot.tag.position = c(0.05, 0.95), # Modify position of plot tag
legend.position = c(0.275, .85), # Modify position of legend
# Other Aesthetics
axis.line = element_line(size = 1.3), # Modify axis line attributes
axis.ticks = element_line(size = 1.3, color = "black"), # Modify axis tick mark attributes
axis.ticks.length = unit(0.2, "cm"), # Modify how long each tick is
legend.key.size = unit(1.5, "cm"), # Modify the size of the legend key boxes
strip.background = element_rect(colour="white") # Gets rid of default background
)+
xlab("Ethanol % (v/v)")+ # X axis label
ylab("Aversive Responses (+/-SEM)") # Y axis label
temporary.ggp
temporary.ggp
# Start ggplot
temporary2.ggp <- ggplot(plots$eth$avers$total.e$fx,
aes(totale,
fit,
group = Age,
col = Age,
fill = Age,
shape = Age))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$no.ctrl,
aes(x = TOTAL.ETOH.Swap.Consumed..g.kg.,
y = Total.Aversive),
size = 4,
alpha = 0.75)+
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$total.e$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"), # Poisson link function
linewidth = 1.5)+ # Width of trend lines
# Add Error Ribbon to graph
geom_ribbon(data = plots$eth$avers$total.e$fx,
aes(ymin = lower, ymax = upper),
colour = NA, # colour = NA suppresses edges of the ribbon
alpha = .25)+ # Opacity at 25% (75% Transparent)
facet_wrap(~ as.factor(Concentration), nrow = 1)+ # Makes the plot multi-panel. One for each level of Concentration
labs(tag="B.")+ # Add image tag for final image combo.
scale_color_manual("",
values = c("#F8766D", "#00BFC4"), # Line and Point color
labels = c('Adolescent+IAE', 'Adult+IAE'))+ # Labels for legend
scale_fill_manual("",
values = c("#F8766D", "#00BFC4"), # Ribbon color
labels = c('Adolescent+IAE', 'Adult+IAE'))+ # Legend labels
scale_linetype_manual("",
values = c("solid", "solid"), # Types of lines
labels = c('Adolescent+IAE', 'Adult+IAE'))+ # Legend labels
scale_shape_manual("",
values = c(16, 15), # Shapes of points
labels = c('Adolescent+IAE', 'Adult+IAE'))+
scale_x_continuous(expand = c(0, 0),
limits = c(0, 130), # Axis length limits
breaks = seq(0, 125, 25), # Axis break positions
labels = as.character(seq(0, 125, 25)))+ # Axis value labels
scale_y_continuous(expand = c(0, 0),
limits = , # Axis length limits
breaks = seq(0, 550, 50), # Axis break positions
labels = as.character(ifelse(seq(0, 550, 50) == 0 | # Axis Value Labels
seq(0, 550, 50) %% 100 == 0,
seq(0, 550, 50),
"")))+ # makes every other label
theme_classic()+
theme(# Text
strip.text.x = element_text(size = 17, face = "bold"), # Modify label text for facets
axis.title = element_text(size = 18), # Modify axis title text
axis.text = element_text(size = 17, color = "black", face = "bold"), # Modify axis value text
legend.title = element_text(size = 16), # Modify legend title text (!) Probably Uneccessary
legend.text = element_text(size = 14), # Modify legend value text
plot.tag = element_text(size = 32, face = "bold"), # Modify the plot tag (e.g. "A.") text
plot.title = element_text(size = 18, hjust = 0.5), # I used the plot title text as axis text here.
# Positioning
axis.title.x = element_text(margin = margin(t = 13, r = 0, b = 0, l = 0)), # Modify X axis appearance
axis.title.y = element_text(margin = margin(t = 0, r = 18, b = 0, l = 0)), # Modify Y axis appearance
plot.tag.position = c(0.035, 0.95), # Modify position of plot tag
legend.position = c(0.125, .85), # Modify position of legend # Modify position of legend
# Other Aesthetics
axis.line = element_line(size = 1.3), # Modify axis line attributes
axis.ticks = element_line(size = 1.3, color = "black"), # Modify axis tick mark attributes
axis.ticks.length = unit(0.2, "cm"), # Modify how long each tick is
legend.key.size = unit(1.5, "cm"), # Modify the size of the legend key boxes
strip.background = element_rect(colour="white"), # Gets rid of default background
panel.spacing = unit(1.75, "lines")
)+
xlab("Total Ethanol Consumed (g/kg)")+
ylab("Aversive Responses (+/-SEM)")+
ggtitle("Ethanol % (v/v)")
temporary2.ggp
# Combine the two individual ggplots into one larger multipanel ggplot
temporary3.ggp <- temporary.ggp +
temporary2.ggp +
plot_layout(ncol = 2, widths = c(1, 2)) # Layout 2 columns with 1/3 for first col 2/3s for second plot.
temporary3.ggp
# Save the plot
ggsave("Fig 8A&B Ethanol Aversive Fits.png",
temporary3.ggp,
width = 1600,
height = 600,
units = "px",
dpi = 96)
remove(temporary.ggp,temporary2.ggp,temporary3.ggp)
# Save the workspace
save.image("ABHV_workspace.RData")
View(plots)
plots[["eth"]][["avers"]][["combo.ggp"]]
# Start ggplot
temporary.ggp <- ggplot(plots$eth$avers$overall$fx,
aes(Concentration, fit,
group = interaction(Age, Condition),
col = interaction(Age, Condition),
fill = interaction(Age, Condition),
linetype = interaction(Age, Condition),
shape = interaction(Age, Condition)))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$ctrl,
aes(x = Concentration, y = Total.Aversive),
size = 4,
alpha = 0.75)+
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$overall$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"), # Poisson link function
linewidth = 1.5)+ # Width of trend lines
# Add Error Ribbon to Graph
geom_ribbon(data = plots$eth$avers$overall$fx,
aes(ymin = lower, ymax = upper),
colour = NA, # colour = NA suppresses edges of the ribbon
alpha = 0.25)+ # Opacity at 25% (75% Transparent)
labs(tag = "A.")+ # Add image tag for multipanel final image
scale_color_manual("",
values = c("#F8C8C8", "#82BFC4","#F8766D","#00BFC4"), # Line and Point color
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Labels for legend
scale_fill_manual("",
values = c("#F8C8C8", "#82BFC4","#F8766D","#00BFC4"), # Ribbon color
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Legend labels
scale_linetype_manual("",
values = c("dashed","dashed","solid","solid"), # Types of lines
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Legend labels
scale_shape_manual("",
values = c(17,18,16,15), # Shapes of points
labels = c('Adolescent+CTRL','Adult+CTRL','Adolescent+IAE','Adult+IAE'))+ # Legend labels
scale_x_continuous(expand = c(0, 0),
limits = c(0, 41), # Axis length limits
breaks = c(5, 20, 40), # Axis break positions
labels = as.character(c(5, 20, 40)))+ # Axis value labels
scale_y_continuous(expand = c(0, 0),
limits = c(0, 110), # Axis length limits
breaks = seq(from = 0, to = 100, by = 25), # Axis break positions
labels = as.character(seq(from = 0, to = 100, by = 25)))+ # Axis value labels
theme_classic()+
theme(# Text
strip.text.x = element_text(size = 17, face = "bold"), # Modify label text for facets
axis.title = element_text(size = 18), # Modify axis title text
axis.text = element_text(size = 17, color = "black", face = "bold"), # Modify axis value text
legend.title = element_text(size = 16), # Modify legend title text (!) Probably Uneccessary
legend.text = element_text(size = 14), # Modify legend value text
plot.tag = element_text(size = 32, face = "bold"), # Modify the plot tag (e.g. "A.") text
# Positioning
axis.title.x = element_text(margin = margin(t = 13, r = 0, b = 0, l = 0)), # Modify X axis appearance
axis.title.y = element_text(margin = margin(t = 0, r = 18, b = 0, l = 0)), # Modify Y axis appearance
plot.tag.position = c(0.05, 0.95), # Modify position of plot tag
legend.position = c(0.275, .85), # Modify position of legend
# Other Aesthetics
axis.line = element_line(size = 1.3), # Modify axis line attributes
axis.ticks = element_line(size = 1.3, color = "black"), # Modify axis tick mark attributes
axis.ticks.length = unit(0.2, "cm"), # Modify how long each tick is
legend.key.size = unit(1.5, "cm"), # Modify the size of the legend key boxes
strip.background = element_rect(colour="white") # Gets rid of default background
)+
xlab("Ethanol % (v/v)")+ # X axis label
ylab("Aversive Responses (+/-SEM)") # Y axis label
temporary.ggp
# Start ggplot
temporary2.ggp <- ggplot(plots$eth$avers$total.e$fx,
aes(totale,
fit,
group = Age,
col = Age,
fill = Age,
shape = Age))+
# Add Raw Data to graph
geom_point(data = ABHVdata$eth$no.ctrl,
aes(x = TOTAL.ETOH.Swap.Consumed..g.kg.,
y = Total.Aversive),
size = 4,
alpha = 0.75)+
# Add Prediction Line to graph
geom_smooth(data = plots$eth$avers$total.e$fx,
se = FALSE, # Don't show Std. Error, we have error ribbons for that
method = "glm", # Generalized linear model
method.args = list(family = "poisson"), # Poisson link function
linewidth = 1.5)+ # Width of trend lines
# Add Error Ribbon to graph
geom_ribbon(data = plots$eth$avers$total.e$fx,
aes(ymin = lower, ymax = upper),
colour = NA, # colour = NA suppresses edges of the ribbon
alpha = .25)+ # Opacity at 25% (75% Transparent)
facet_wrap(~ as.factor(Concentration), nrow = 1)+ # Makes the plot multi-panel. One for each level of Concentration
labs(tag="B.")+ # Add image tag for final image combo.
scale_color_manual("",
values = c("#F8766D", "#00BFC4"), # Line and Point color
labels = c('Adolescent+IAE', 'Adult+IAE'))+ # Labels for legend
scale_fill_manual("",
values = c("#F8766D", "#00BFC4"), # Ribbon color
labels = c('Adolescent+IAE', 'Adult+IAE'))+ # Legend labels
scale_linetype_manual("",
values = c("solid", "solid"), # Types of lines
labels = c('Adolescent+IAE', 'Adult+IAE'))+ # Legend labels
scale_shape_manual("",
values = c(16, 15), # Shapes of points
labels = c('Adolescent+IAE', 'Adult+IAE'))+
scale_x_continuous(expand = c(0, 0),
limits = c(0, 130), # Axis length limits
breaks = seq(0, 125, 25), # Axis break positions
labels = as.character(seq(0, 125, 25)))+ # Axis value labels
scale_y_continuous(expand = c(0, 0),
limits = c(0, 110), # Axis length limits
breaks = seq(from = 0, to = 100, by = 25), # Axis break positions
labels = as.character(seq(from = 0, to = 100, by = 25)))+ # makes every other label
theme_classic()+
theme(# Text
strip.text.x = element_text(size = 17, face = "bold"), # Modify label text for facets
axis.title = element_text(size = 18), # Modify axis title text
axis.text = element_text(size = 17, color = "black", face = "bold"), # Modify axis value text
legend.title = element_text(size = 16), # Modify legend title text (!) Probably Uneccessary
legend.text = element_text(size = 14), # Modify legend value text
plot.tag = element_text(size = 32, face = "bold"), # Modify the plot tag (e.g. "A.") text
plot.title = element_text(size = 18, hjust = 0.5), # I used the plot title text as axis text here.
# Positioning
axis.title.x = element_text(margin = margin(t = 13, r = 0, b = 0, l = 0)), # Modify X axis appearance
axis.title.y = element_text(margin = margin(t = 0, r = 18, b = 0, l = 0)), # Modify Y axis appearance
plot.tag.position = c(0.035, 0.95), # Modify position of plot tag
legend.position = c(0.125, .85), # Modify position of legend # Modify position of legend
# Other Aesthetics
axis.line = element_line(size = 1.3), # Modify axis line attributes
axis.ticks = element_line(size = 1.3, color = "black"), # Modify axis tick mark attributes
axis.ticks.length = unit(0.2, "cm"), # Modify how long each tick is
legend.key.size = unit(1.5, "cm"), # Modify the size of the legend key boxes
strip.background = element_rect(colour="white"), # Gets rid of default background
panel.spacing = unit(1.75, "lines")
)+
xlab("Total Ethanol Consumed (g/kg)")+
ylab("Aversive Responses (+/-SEM)")+
ggtitle("Ethanol % (v/v)")
temporary2.ggp
# Combine the two individual ggplots into one larger multipanel ggplot
temporary3.ggp <- temporary.ggp +
temporary2.ggp +
plot_layout(ncol = 2, widths = c(1, 2)) # Layout 2 columns with 1/3 for first col 2/3s for second plot.
temporary3.ggp
# Save the plot
ggsave("Fig 8A&B Ethanol Aversive Fits.png",
temporary3.ggp,
width = 1600,
height = 600,
units = "px",
dpi = 96)
# Save the plot
ggsave("Fig 8A&B Ethanol Aversive Fits.png",
temporary3.ggp,
width = 1600,
height = 600,
units = "px",
dpi = 96)
